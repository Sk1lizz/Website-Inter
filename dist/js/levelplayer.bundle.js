document.addEventListener("DOMContentLoaded",(async()=>{const e=new URLSearchParams(window.location.search).get("id");if(e)try{const i=await fetch(`/api/players_by_number.php?number=${e}`);if(!i.ok)throw new Error("Игрок не найден");const a=await i.json();if(!a||!a.id)throw new Error("Данные игрока неполные");const r=`/img/player/player_${a.id}.png`,s=document.querySelector(".player-card img");s&&(s.src=r,s.alt=`${a.name} ${a.patronymic||""}`.trim(),s.onerror=()=>{s.src="/img/player/player_0.png"});const o=await fetch(`/api/player_statistics.php?id=${a.id}`);if(!o.ok)throw new Error("Ошибка при загрузке статистики сезона");const l=await o.json(),c=await fetch(`/api/player_statistics_all.php?id=${a.id}`);if(!c.ok)throw new Error("Ошибка при загрузке общей статистики");const m=await c.json(),d=m&&m.length>0?m[0]:{},u=document.querySelector(".player-name"),g=document.querySelector(".player-info");if(u&&(u.textContent=`${a.name} ${a.patronymic||""}`.trim()),g){const e=new Date(a.join_date),i=new Date;let r=i.getFullYear()-e.getFullYear(),s=i.getMonth()-e.getMonth();s<0&&(r--,s+=12);const o=[];r>0&&o.push(`${r} ${n(r,["год","года","лет"])}`),s>0&&o.push(`${s} ${n(s,["месяц","месяца","месяцев"])}`),g.innerHTML=`\n              <p><strong>Номер:</strong> ${a.number}</p>\n            <p><strong>Позиция:</strong> ${a.position}</p>\n            <p><strong>Рост:</strong> ${a.height_cm||"-"} см</p>\n            <p><strong>Вес:</strong> ${a.weight_kg||"-"} кг</p>\n            <p><strong>Возраст:</strong> ${function(e){const t=new Date(e),n=new Date;let i=n.getFullYear()-t.getFullYear();const a=n.getMonth()-t.getMonth();return(a<0||0===a&&n.getDate()<t.getDate())&&i--,i}(a.birth_date)}</p>\n            <p><strong>Присоединился:</strong> ${t(a.join_date,"short")}</p>\n             <p><strong>Дата Рождения:</strong> ${t(a.birth_date,"numeric")}</p>\n            <p><strong>Время в команде:</strong> ${o.join(" ")||"менее месяца"}</p>\n        `}const p=document.querySelector(".season-stats");p&&(p.innerHTML=`\n                <div><div class="number">${l.matches||0}</div>Матчей</div>\n                <div><div class="number">${l.goals||0}</div>Голов</div>\n                <div><div class="number">${l.assists||0}</div>Ассистов</div>\n                <div><div class="number">${(l.goals||0)+(l.assists||0)}</div>Гол+пас</div>\n                <div><div class="number">${l.lostgoals||0}</div>Голов пропущено</div>\n                <div><div class="number">${l.zeromatch||0}</div>Матчей на 0</div>\n            `);const v=document.querySelector(".all-stats");if(v){const e=e=>(l[e]||0)+(d[e]||0);v.innerHTML=`\n                <div><div class="number number2 matches">${e("matches")}</div>Матчей</div>\n                <div><div class="number number2 goals">${e("goals")}</div>Голов</div>\n                <div><div class="number number2 assists">${e("assists")}</div>Ассистов</div>\n                <div><div class="number">${e("goals")+e("assists")}</div>Гол+пас</div>\n                <div><div class="number number2 lostgoals">${e("lostgoals")}</div>Голов пропущено</div>\n                <div><div class="number number2 zeromatch">${e("zeromatch")}</div>Матчей на 0</div>\n            `,function(e){const t=[{limit:500,name:"Новичок"},{limit:1e3,name:"Перспективный"},{limit:2500,name:"Футболист"},{limit:5e3,name:"Опытный"},{limit:7500,name:"Старожил"},{limit:1e4,name:"Мастер"},{limit:12500,name:"Герой"},{limit:15e3,name:"Магистр"},{limit:2e4,name:"Посвященный"},{limit:25e3,name:"Ветеран"},{limit:3e4,name:"Виртуоз"},{limit:35e3,name:"Элита"},{limit:45e3,name:"Чемпион"},{limit:6e4,name:"Хранитель"},{limit:75e3,name:"Вершитель"},{limit:9e4,name:"Избранный"},{limit:1/0,name:"Легенда"}];let n=0;for(let i=0;i<t.length;i++)if(e<=t[i].limit){n=i;break}const i=t[n],a=0===n?0:t[n-1].limit,r=(i.limit,i.limit),s=e-a,o=r-a,l=r===1/0?100:Math.min(100,s/o*100),c=document.getElementById("experience-bar-fill"),m=document.getElementById("experience-bar-text"),d=document.getElementById("title");c&&(c.style.width=l+"%"),m&&(m.textContent=r===1/0?`${e} / ∞`:`${e} / ${r}`),d&&(d.textContent=i.name)}(function(){const t=e("matches"),n=e("goals"),i=e("assists"),a=e("zeromatch");let r=0,s=0;if(g){const e=[...g.querySelectorAll("p")].find((e=>e.querySelector("strong")?.textContent.includes("Время в команде")));if(e){const t=e.textContent,n=t.match(/(\d+)\s(год|года|лет)/),i=t.match(/(\d+)\s(месяц|месяца|месяцев)/);n&&(r=parseInt(n[1])),i&&(s=parseInt(i[1]))}}return 100*(12*r+s)+50*t+125*n+100*i+250*a}())}document.getElementById("achievements-block");const h=document.querySelector(".achievements-card"),$=document.querySelector(".achievements-list");try{const e=await fetch(`/api/achievements.php?player_id=${a.id}`);if(!e.ok)throw new Error("Ошибка при получении достижений");const t=await e.json();if(h.style.display="block",$.innerHTML="",t?.length)t.forEach((e=>{const t=document.createElement("div");t.classList.add("career-item"),t.innerHTML=`\n                        ${e.award_title}<span>${e.award_year}</span>\n                        <small>${e.team_name}</small>\n                    `,$.appendChild(t)}));else{const e=document.createElement("div");e.classList.add("empty-achievements"),e.textContent="Нет достижений",$.appendChild(e)}}catch(e){console.error("Ошибка при загрузке достижений:",e),h.style.display="block",$.innerHTML='<div class="error-msg">Не удалось загрузить достижения</div>'}}catch(e){console.error("Ошибка при загрузке данных игрока:",e)}else console.error("ID игрока не указан в URL");function t(e,t="full"){const n=new Date(e);return"short"===t?n.getFullYear().toString():"numeric"===t?`${String(n.getDate()).padStart(2,"0")}.${String(n.getMonth()+1).padStart(2,"0")}.${n.getFullYear()}`:n.toLocaleDateString("ru-RU",{year:"numeric",month:"long",day:"numeric"})}function n(e,t){const n=e%10,i=e%100;return i>=11&&i<=14?t[2]:1===n?t[0]:n>=2&&n<=4?t[1]:t[2]}}));