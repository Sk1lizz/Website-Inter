document.addEventListener("DOMContentLoaded",(async()=>{const e=new URLSearchParams(window.location.search).get("id");if(e)try{const i=await fetch(`/api/players_by_number.php?number=${e}`);if(!i.ok)throw new Error("Игрок не найден");const s=await i.json();if(!s||!s.id)throw new Error("Данные игрока неполные");const r=`/img/player/player_${s.id}.png`,o=document.querySelector(".player-card img");o&&(o.src=r,o.alt=`${s.name} ${s.patronymic||""}`.trim(),o.onerror=()=>{o.src="/img/player/player_0.png"});const l=await fetch(`/api/player_statistics.php?id=${s.id}`);if(!l.ok)throw new Error("Ошибка при загрузке статистики сезона");const c=await l.json(),m=await fetch(`/api/player_statistics_all.php?id=${s.id}`);if(!m.ok)throw new Error("Ошибка при загрузке общей статистики");const d=await m.json(),u=(d&&d.length>0&&d[0],document.querySelector(".player-name")),p=document.querySelector(".player-info");if(u&&(u.textContent=`${s.name} ${s.patronymic||""}`.trim()),p){const e=new Date(s.join_date),i=new Date;let a=i.getFullYear()-e.getFullYear(),r=i.getMonth()-e.getMonth();r<0&&(a--,r+=12);const o=[];a>0&&o.push(`${a} ${n(a,["год","года","лет"])}`),r>0&&o.push(`${r} ${n(r,["месяц","месяца","месяцев"])}`),p.innerHTML=`\n              <p><strong>Номер:</strong> ${s.number}</p>\n            <p><strong>Позиция:</strong> ${s.position}</p>\n            <p><strong>Рост:</strong> ${s.height_cm||"-"} см</p>\n            <p><strong>Вес:</strong> ${s.weight_kg||"-"} кг</p>\n            <p><strong>Возраст:</strong> ${function(e){const t=new Date(e),n=new Date;let i=n.getFullYear()-t.getFullYear();const a=n.getMonth()-t.getMonth();return(a<0||0===a&&n.getDate()<t.getDate())&&i--,i}(s.birth_date)}</p>\n            <p><strong>Присоединился:</strong> ${t(s.join_date,"short")}</p>\n             <p><strong>Дата Рождения:</strong> ${t(s.birth_date,"numeric")}</p>\n            <p><strong>Время в команде:</strong> ${o.join(" ")||"менее месяца"}</p>\n        `}const g=document.querySelector(".season-stats");if(g&&(g.innerHTML=`\n                <div><div class="number">${c.matches||0}</div>Матчей</div>\n                <div><div class="number">${c.goals||0}</div>Голов</div>\n                <div><div class="number">${c.assists||0}</div>Ассистов</div>\n                <div><div class="number">${(c.goals||0)+(c.assists||0)}</div>Гол+пас</div>\n                <div><div class="number">${c.lostgoals||0}</div>Голов пропущено</div>\n                <div><div class="number">${c.zeromatch||0}</div>Матчей на 0</div>\n            `),document.querySelector(".all-stats")){const e=await fetch(`/api/player_statistics_all.php?id=${a.id}`).then((e=>e.json())),t=e.combined||e;document.querySelector(".all-stats").innerHTML=`\n    <div><div class="number number2 matches">${t.matches}</div>Матчей</div>\n    <div><div class="number number2 goals">${t.goals}</div>Голов</div>\n    <div><div class="number number2 assists">${t.assists}</div>Ассистов</div>\n    <div><div class="number">${t.goals+t.assists}</div>Гол+пас</div>\n    <div><div class="number number2 lostgoals">${t.lostgoals}</div>Голов пропущено</div>\n    <div><div class="number number2 zeromatch">${t.zeromatch}</div>Матчей на 0</div>\n`,function(e){const t=[{limit:500,name:"Новичок"},{limit:1e3,name:"Перспективный"},{limit:2500,name:"Футболист"},{limit:5e3,name:"Опытный"},{limit:7500,name:"Старожил"},{limit:1e4,name:"Мастер"},{limit:12500,name:"Герой"},{limit:15e3,name:"Магистр"},{limit:2e4,name:"Посвященный"},{limit:25e3,name:"Ветеран"},{limit:3e4,name:"Виртуоз"},{limit:35e3,name:"Элита"},{limit:45e3,name:"Чемпион"},{limit:6e4,name:"Хранитель"},{limit:75e3,name:"Вершитель"},{limit:9e4,name:"Избранный"},{limit:1/0,name:"Легенда"}];let n=0;for(let i=0;i<t.length;i++)if(e<=t[i].limit){n=i;break}const i=t[n],a=0===n?0:t[n-1].limit,s=(i.limit,i.limit),r=e-a,o=s-a,l=s===1/0?100:Math.min(100,r/o*100),c=document.getElementById("experience-bar-fill"),m=document.getElementById("experience-bar-text"),d=document.getElementById("title");c&&(c.style.width=l+"%"),m&&(m.textContent=s===1/0?`${e} / ∞`:`${e} / ${s}`),d&&(d.textContent=i.name)}(function(){const e=sum("matches"),t=sum("goals"),n=sum("assists"),i=sum("zeromatch");let a=0,s=0;if(p){const e=[...p.querySelectorAll("p")].find((e=>e.querySelector("strong")?.textContent.includes("Время в команде")));if(e){const t=e.textContent,n=t.match(/(\d+)\s(год|года|лет)/),i=t.match(/(\d+)\s(месяц|месяца|месяцев)/);n&&(a=parseInt(n[1])),i&&(s=parseInt(i[1]))}}return 100*(12*a+s)+50*e+125*t+100*n+250*i}())}document.getElementById("achievements-block");const h=document.querySelector(".achievements-card"),v=document.querySelector(".achievements-list");try{const e=await fetch(`/api/achievements.php?player_id=${s.id}`);if(!e.ok)throw new Error("Ошибка при получении достижений");const t=await e.json();if(h.style.display="block",v.innerHTML="",t?.length)t.forEach((e=>{const t=document.createElement("div");t.classList.add("career-item"),t.innerHTML=`\n                        ${e.award_title}<span>${e.award_year}</span>\n                        <small>${e.team_name}</small>\n                    `,v.appendChild(t)}));else{const e=document.createElement("div");e.classList.add("empty-achievements"),e.textContent="Нет достижений",v.appendChild(e)}}catch(e){console.error("Ошибка при загрузке достижений:",e),h.style.display="block",v.innerHTML='<div class="error-msg">Не удалось загрузить достижения</div>'}}catch(e){console.error("Ошибка при загрузке данных игрока:",e)}else console.error("ID игрока не указан в URL");function t(e,t="full"){const n=new Date(e);return"short"===t?n.getFullYear().toString():"numeric"===t?`${String(n.getDate()).padStart(2,"0")}.${String(n.getMonth()+1).padStart(2,"0")}.${n.getFullYear()}`:n.toLocaleDateString("ru-RU",{year:"numeric",month:"long",day:"numeric"})}function n(e,t){const n=e%10,i=e%100;return i>=11&&i<=14?t[2]:1===n?t[0]:n>=2&&n<=4?t[1]:t[2]}}));