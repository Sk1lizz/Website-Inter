document.addEventListener("DOMContentLoaded",(async()=>{const e=new URLSearchParams(window.location.search).get("id");if(!e)return console.error("ID игрока не указан в URL");function t(e,t="full"){const n=new Date(e);return"short"===t?n.getFullYear().toString():"numeric"===t?`${String(n.getDate()).padStart(2,"0")}.${String(n.getMonth()+1).padStart(2,"0")}.${n.getFullYear()}`:n.toLocaleDateString("ru-RU",{year:"numeric",month:"long",day:"numeric"})}function n(e,t){const n=e%10,i=e%100;return i>=11&&i<=14?t[2]:1===n?t[0]:n>=2&&n<=4?t[1]:t[2]}try{const i=await fetch(`/api/get_player.php?id=${e}`);if(!i.ok)throw new Error("Игрок не найден");const s=await i.json();let a=0,r=0;const l=document.querySelector(".player-card img");l.src=`/img/player/player_${s.id}.png`,l.alt=`${s.name} ${s.patronymic||""}`.trim(),l.onerror=()=>{l.src="/img/player/player_0.png"};const o=document.querySelector(".player-info"),m=new Date(s.join_date),c=new Date;a=c.getFullYear()-m.getFullYear(),r=c.getMonth()-m.getMonth(),r<0&&(a--,r+=12);const d=[];a>0&&d.push(`${a} ${n(a,["год","года","лет"])}`),r>0&&d.push(`${r} ${n(r,["месяц","месяца","месяцев"])}`),document.querySelector(".player-name").textContent=`${s.name} ${s.patronymic||""}`.trim(),o.innerHTML=`\n            <p><strong>Номер:</strong> ${s.number}</p>\n            <p><strong>Позиция:</strong> ${s.position}</p>\n            <p><strong>Рост:</strong> ${s.height_cm||"-"}</p>\n            <p><strong>Вес:</strong> ${s.weight_kg||"-"}</p>\n            <p><strong>Возраст:</strong> ${function(e){const t=new Date(e),n=new Date;let i=n.getFullYear()-t.getFullYear();const s=n.getMonth()-t.getMonth();return(s<0||0===s&&n.getDate()<t.getDate())&&i--,i}(s.birth_date)}</p>\n            <p><strong>Присоединился:</strong> ${t(s.join_date,"short")}</p>\n            <p><strong>Дата Рождения:</strong> ${t(s.birth_date,"numeric")}</p>\n            <p><strong>Время в команде:</strong> ${d.join(" ")||"менее месяца"}</p>\n        `;const g=await fetch(`/api/player_statistics_all.php?id=${s.id}`);if(!g.ok)throw new Error("Ошибка загрузки статистики");const u=await g.json(),p=u.season||{},h=u.all||{},v=["matches","goals","assists","zeromatch","lostgoals","zanetti_priz"].every((e=>!h[e]||0===Number(h[e]))),y=e=>({matches:Number(e.matches)||0,goals:Number(e.goals)||0,assists:Number(e.assists)||0,zeromatch:Number(e.zeromatch)||0,lostgoals:Number(e.lostgoals)||0}),$=y(p),b=y(h),f=v?$:{matches:$.matches+b.matches,goals:$.goals+b.goals,assists:$.assists+b.assists,zeromatch:$.zeromatch+b.zeromatch,lostgoals:$.lostgoals+b.lostgoals};document.querySelector(".season-stats").innerHTML=`\n            <div><div class="number">${p.matches||0}</div>Матчей</div>\n            <div><div class="number">${p.goals||0}</div>Голов</div>\n            <div><div class="number">${p.assists||0}</div>Ассистов</div>\n            <div><div class="number">${(p.goals||0)+(p.assists||0)}</div>Гол+пас</div>\n            <div><div class="number">${p.lostgoals||0}</div>Голов пропущено</div>\n            <div><div class="number">${p.zeromatch||0}</div>Матчей на 0</div>\n        `,document.querySelector(".all-stats").innerHTML=`\n            <div><div class="number number2 matches">${f.matches}</div>Матчей</div>\n            <div><div class="number number2 goals">${f.goals}</div>Голов</div>\n            <div><div class="number number2 assists">${f.assists}</div>Ассистов</div>\n            <div><div class="number">${f.goals+f.assists}</div>Гол+пас</div>\n            <div><div class="number number2 lostgoals">${f.lostgoals}</div>Голов пропущено</div>\n            <div><div class="number number2 zeromatch">${f.zeromatch}</div>Матчей на 0</div>\n        `;const w=document.querySelector(".card.success"),_=document.querySelector(".success-list"),x=document.getElementById("success-count"),[S,M]=await Promise.all([fetch("/api/get_success_list.php"),fetch(`/api/get_player_success.php?player_id=${s.id}`)]),L=await S.json(),z=await M.json(),D=L.filter((e=>z.includes(e.id))),E=D.reduce(((e,t)=>e+(t.points||0)),0);w.style.display=D.length>0?"block":"none",x.textContent=`${D.length} / ${L.length} • ${E} очков`,_.innerHTML="",D.forEach((e=>{const t=`/img/success/success-${e.id}.png`,n=document.createElement("div");n.className="success-item",n.style.marginBottom="14px",n.style.paddingTop="10px",n.innerHTML=`\n                <div style="display: flex; align-items: center; justify-content: space-between; gap: 12px;">\n                    <img src="${t}" onerror="this.src='/img/success/success-0.png'" width="50" height="50" style="border-radius: 6px; flex-shrink: 0;">\n                    <div style="flex: 1;">\n                        <div style="font-weight: bold;">${e.title}</div>\n                        <div style="color: #c5c2c2; font-size: 14px;">${e.description}</div>\n                    </div>\n                    <div style="color: #2D62B5; font-weight: bold; font-size: 14px;">${e.points} очков</div>\n                </div>\n            `,_.appendChild(n)})),function(e){const t=[{limit:500,name:"Новичок"},{limit:1e3,name:"Перспективный"},{limit:2500,name:"Футболист"},{limit:5e3,name:"Опытный"},{limit:7500,name:"Старожил"},{limit:1e4,name:"Мастер"},{limit:12500,name:"Герой"},{limit:15e3,name:"Магистр"},{limit:2e4,name:"Посвященный"},{limit:25e3,name:"Ветеран"},{limit:3e4,name:"Виртуоз"},{limit:35e3,name:"Элита"},{limit:45e3,name:"Чемпион"},{limit:6e4,name:"Хранитель"},{limit:75e3,name:"Вершитель"},{limit:9e4,name:"Избранный"},{limit:11e4,name:"Мудрец"},{limit:13e4,name:"Наставник"},{limit:15e4,name:"Вдохновитель"},{limit:175e3,name:"Архонт"},{limit:2e5,name:"Маэстро"},{limit:225e3,name:"Хранитель огня"},{limit:25e4,name:"Лидер эпохи"},{limit:275e3,name:"Идеал"},{limit:3e5,name:"Миф"},{limit:35e4,name:"Символ клуба"},{limit:4e5,name:"Бессмертный"},{limit:45e4,name:"Наследие"},{limit:5e5,name:"Полубог"},{limit:1/0,name:"Легенда"}],n=t.find((t=>e<=t.limit))||t.at(-1),i=t[t.indexOf(n)-1]?.limit||0,s=n.limit===1/0?100:Math.min(100,(e-i)/(n.limit-i)*100);document.getElementById("experience-bar-fill").style.width=`${s}%`,document.getElementById("experience-bar-text").textContent=`${e} / ${n.limit===1/0?"∞":n.limit}`,document.getElementById("title").textContent=n.name}(function(e=0){const{matches:t,goals:n,assists:i,zeromatch:s}=f;return 100*(12*a+r)+50*t+125*n+100*i+250*s+e}(E));const T=document.querySelector(".achievements-card"),q=T?.querySelector(".achievements-list");try{const e=await fetch(`/api/achievements.php?player_id=${s.id}`),t=await e.text(),n=JSON.parse(t);T.style.display="block",q.innerHTML="",Array.isArray(n)&&n.length>0?n.forEach((e=>{const t=document.createElement("div");t.classList.add("career-item"),t.innerHTML=`\n                        ${e.award_title}<span>${e.award_year}</span>\n                        <small>${e.team_name}</small>\n                    `,q.appendChild(t)})):q.innerHTML='<div class="empty-achievements">Нет достижений</div>'}catch(e){console.error("Ошибка при загрузке достижений:",e),T&&q&&(T.style.display="block",q.innerHTML='<div class="error-msg">Не удалось загрузить достижения</div>')}}catch(e){console.error("Ошибка при загрузке данных игрока:",e)}}));